#!/bin/bash

set -e
set -x

cd "`dirname \"$0\"`"

./provision-basic

ENV_CONFIG_PATH=/app/shared/production.sh
[ -f $ENV_CONFIG_PATH ] && source $ENV_CONFIG_PATH
apt-get install -y nginx


[ -f /etc/nginx/sites-enabled/default ] && rm /etc/nginx/sites-enabled/default
cat > /etc/nginx/nginx.conf <<NGINX
user app;
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    default_type        application/octet-stream;
    gzip                on;
    include             mime.types;
    keepalive_timeout   65;
    sendfile            on;

    types_hash_max_size 2048;

    include $APP_ROOT/config/nginx.conf;
}
NGINX

cat > /etc/init/puma.conf <<UPSTART
description "puma"

start on startup
stop on shutdown

setuid app
setgid app
chdir $APP_ROOT

respawn

reload signal SIGUSR2

exec $APP_ROOT/bin/puma -C $APP_ROOT/config/puma.rb
UPSTART

cat > /etc/init/comedy_worker.conf <<UPSTART
description "comedy_worker"

start on startup
stop on shutdown

setuid app
setgid app
chdir $APP_ROOT
env RAILS_ENV=production

respawn

exec $APP_ROOT/bin/comedy_worker
UPSTART

if ! grep -q 'app ALL=NOPASSWD: ALL' /etc/sudoers; then

  cat >> /etc/sudoers <<SUDOERS
app ALL=NOPASSWD: ALL
SUDOERS

fi

if [ -f ~/id_rsa.pub ]; then
  mkdir -p ~/.ssh
  if [ ! -f ~/.ssh/authorized_keys ]; then
    cp ~/id_rsa.pub ~/.ssh/authorized_keys
  fi

  mkdir -p /app/.ssh
  if [ ! -f /app/.ssh/authorized_keys ]; then
    cp ~/id_rsa.pub /app/.ssh/authorized_keys
    chown app:app /app/.ssh/authorized_keys
  fi
fi

if ! grep -q RAILS_ENV /etc/profile; then
  echo "export RAILS_ENV=production" >> /etc/profile
fi
