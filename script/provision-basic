#!/bin/bash
# This script is intended to be run on a fresh Ubuntu 13.04 x64 machine.
# It sets up a production environment for the Contestrus app to run.

set -ex

if [ $UID -ne 0 ]; then
  echo "Please run script/provision-basic as root."
  exit 1
fi

cd /

# For apt-add-repository
apt-get install -y \
  python-software-properties \
  software-properties-common

# Install packages we depend on
apt-add-repository -y ppa:brightbox/ruby-ng

apt-get update

apt-get install -y \
  build-essential \
  git \
  htop \
  libreadline6-dev \
  libsqlite3-dev \
  libssl-dev \
  ruby2.1-dev \
  libxml2-dev \
  libxslt-dev \
  libyaml-dev \
  ncurses-dev \
  nodejs \
  openssl \
  sqlite3 \
  sudo \
  vim \
  zlib1g-dev \
  docker.io \
  linux-image-extra-`uname -r`

gem install bundler --no-rdoc --no-ri

## Create the app user and the /app directory
if [ ! -d /app ]; then
  useradd --home-dir /app --create-home --shell /bin/bash app
fi

# Docker-stuff
sudo ln -sf /usr/bin/docker.io /usr/local/bin/docker
usermod -G docker -a app

## Setup the /app/shared folder and app_config.yml with random secret token
mkdir -p /app/shared/log
if [ ! -f /app/shared/app_config.yml ]; then
  echo "secret_token: $(openssl rand -hex 32)" > /app/shared/app_config.yml
fi

## Install Docker images
docker pull bouk/gcc
docker pull bouk/coffee
docker pull bouk/golang
docker pull bouk/node
docker pull bouk/pypy
docker pull bouk/ruby

## Create .ssh and an empty authorized_keys for app
mkdir -p /app/.ssh
touch /app/.ssh/authorized_keys

## Add github.com public keys to known_hosts
if [ ! -f /app/.ssh/known_hosts ]; then
  cat > /app/.ssh/known_hosts <<KNOWN_HOSTS
|1|diWgaRR5v1U/5b2V5BFjWVApxvY=|VEprbEVtgtMebXhmNB7yfc77kDc= ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
|1|4n4ARSOPBEmRUVOWaKiI3XsjmG4=|QIanVGwVfEQeKfWgWkUrhXi6Vkg= ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
KNOWN_HOSTS
fi

## chown all of /app back to the app user
chown -R app:app /app
